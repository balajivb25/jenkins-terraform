name: Terraform Workflow

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose action to run'
        required: true
        default: 'apply'
        type: choice
        options:
          - init
          - fmt
          - validate
          - plan
          - apply
          - destroy
      runner_type:
        description: 'Choose the runner environment'
        required: true
        default: 'github-hosted'
        type: choice
        options:
          - github-hosted
          - self-hosted

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ap-south-1
jobs:
  init:
    name: Terraform Init
    runs-on: ${{ inputs.runner_type == 'self-hosted' && 'self-hosted' || 'ubuntu-latest' }}
    if: ${{ github.event.inputs.action == 'init' }}
    steps:
      - run: echo "Running terraform init"
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6  # Set your Terraform version
      - name: Terraform Init
        run: terraform init

  fmt:
    name: Terraform fmt
    runs-on: ${{ inputs.runner_type == 'self-hosted' && 'self-hosted' || 'ubuntu-latest' }}
    if: ${{ github.event.inputs.action == 'fmt' }}
    steps:
      - run: echo "Running terraform fmt"
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6  # Set your Terraform version
      - name: Terraform Format Check
        run: terraform fmt -recursive

  valdiate:
    name: Terraform Valdiate
    runs-on: ${{ inputs.runner_type == 'self-hosted' && 'self-hosted' || 'ubuntu-latest' }}
    if: ${{ github.event.inputs.action == 'valdiate' }}
    steps:
      - run: echo "Running terraform valdiate"
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6  # Set your Terraform version
      - name: Terraform Init
        run: terraform init
      - name: Terraform Validate
        run: terraform validate
  plan:
    name: Terraform Plan
    runs-on: ${{ inputs.runner_type == 'self-hosted' && 'self-hosted' || 'ubuntu-latest' }}
    if: ${{ github.event.inputs.action == 'plan' }}
    steps:
      - run: echo "Running terraform plan"
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6
      - name: Terraform Init
        run: terraform init
      - name: Terraform Validate
        run: terraform validate
      - name: Terraform Plan
        run: terraform plan

  apply:
    name: Terraform Apply
    runs-on: ${{ inputs.runner_type == 'self-hosted' && 'self-hosted' || 'ubuntu-latest' }}
    if: ${{ github.event.inputs.action == 'apply' }}
    steps:
      - run: echo "Running terraform apply"
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6
      - name: Terraform Init
        run: terraform init
      - name: Terraform Validate
        run: terraform validate
      - name: Terraform Plan
        run: terraform plan
      - name: Terraform Apply
        run: terraform apply -auto-approve
      - name: Upload state file via SCP
        run: |
          scp -i ~/.ssh/id_rsa \
          -o StrictHostKeyChecking=no \
          terraform.tfstate \
          ${{ secrets.SELF_HOST_USER }}@${{ secrets.SELF_HOST_IP }}:/home/${{ secrets.SELF_HOST_USER }}/projects/terraform-projects/git-push/tfstate/


  destroy:
    name: Terraform Destroy
    runs-on: ${{ inputs.runner_type == 'self-hosted' && 'self-hosted' || 'ubuntu-latest' }}
    if: ${{ github.event.inputs.action == 'destroy' }}
    steps:
      - run: echo "Running terraform destroy"
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6
      - name: Terraform Destroy
        run: terraform destroy -auto-approve
